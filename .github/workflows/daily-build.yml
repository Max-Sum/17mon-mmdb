name: Daily Build

on:
  schedule:
    - cron: 2 20 * * *
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo -E apt-get update
          sudo -E apt-get -y install perl
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          perl --version

    - name: Set env variables
      run: |
        echo "::set-env name=RELEASE_NAME::Released on $(date +%Y%m%d)"
        echo "::set-env name=TAG_NAME::$(date +%Y%m%d)"
      shell: bash

    - name: Clone MaxMind-DB-Writer-perl
      env: 
        REPO_URL: https://github.com/maxmind/MaxMind-DB-Writer-perl
      run: git clone $REPO_URL writer

    - name: Clone 17mon-mmdb
      env: 
        REPO_URL: https://github.com/Max-Sum/17mon-mmdb
        REPO_BRANCH: master
      run: git clone -b $REPO_BRANCH $REPO_URL

    - name: Install perl deps
      continue-on-error: true
      run: |
          cd writer
          curl -LO http://xrl.us/cpanm
          sudo -E perl cpanm -n Path::Class
          sudo -E perl cpanm -n .
          
    - name: Build MaxMind-DB-Writer-perl
      run: |
          cd writer
          sudo -E ./Build manifest
          sudo -E perl Build.PL
          sudo -E ./Build install

    - name: Download GeoLite2-Country-CSV
      run: |
          cd 17mon-mmdb
          curl -L -o GeoLite2-Country-CSV.zip "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country-CSV&license_key=JvbzLLx7qBZT&suffix=zip"
          unzip GeoLite2-Country-CSV.zip
          rm -f GeoLite2-Country-CSV.zip
          mv GeoLite2* mindmax

    - name: Download 17mon country.txt
      run: |
          cd 17mon-mmdb
          curl -L -o 17mon.zip "https://cdn.ipip.net/17mon/country.zip"
          unzip 17mon.zip
          rm 17mon.zip LICENSE.TXT

    - name: Build mmdb
      run: |
          cd 17mon-mmdb
          perl generate.pl

    - name: Generate version file
      run: |
          cd 17mon-mmdb
          echo $TAG_NAME > version

    - name: Push to release branch
      run: |
        mkdir publish
        cp -af 17mon-mmdb/version publish/version
        cp -af 17mon-mmdb/Country.mmdb publish/Country.mmdb
        cd publish
        git init
        git config --local user.name "${{ github.actor }}"
        git config --local user.email "${{ github.actor }}@users.noreply.github.com"
        git checkout -b release
        git add .
        git commit -m "${{ env.RELEASE_NAME }}"
        git remote add origin "https://${{ github.actor }}:${{ secrets.PERSONAL_TOKEN }}@github.com/${{ github.repository }}"
        git push -f -u origin release

    - name: Release and upload
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.RELEASE_NAME }}
        tag_name: ${{ env.TAG_NAME }}
        draft: false
        prerelease: false
        files: |
          ./17mon-mmdb/version
          ./17mon-mmdb/Country.mmdb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

